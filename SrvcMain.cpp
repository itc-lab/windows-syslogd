// SrvcMain.cpp: CSrvcMain クラスのインプリメンテーション
//
//////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include "SrvcMain.h"
#include "resource.h"
#include "WorkThread.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

IMPLEMENT_SERVICE(CSrvcMain, SrvcMain)

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
CSrvcMain::CSrvcMain(LPCTSTR szName, LPCTSTR szDisplay, DWORD dwType)
	: CService(szName, szDisplay, dwType)
{
	m_pThis = this;

	::GetModuleFileName( NULL, m_currentdir, sizeof( m_currentdir ) );
	char* pt = strrchr( m_currentdir, '\\' );
	pt[1] = '\0';
	::lstrcpy( m_configfile, m_currentdir );
	::lstrcat( m_configfile, "syslog.conf" );
}

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
CSrvcMain::~CSrvcMain()
{
}

///////////////////////////////////////////////////////////////////////////////
//		メイン
///////////////////////////////////////////////////////////////////////////////
void CSrvcMain::Run()
{
	SetStatus(SERVICE_RUNNING, 0, 0, SERVICE_ACCEPT_STOP | SERVICE_ACCEPT_SHUTDOWN);
//	CEventLog log( (UINT)IDS_DISPLAY_NAME );
//	log.LogEvent(START_SERVICE, EVENTLOG_INFORMATION_TYPE);
	::SetProcessWorkingSetSize(::GetCurrentProcess(), -1, -1);

	CWorkThread* thread = new CWorkThread;
	thread->bDebug = bDebug;
	thread->Start(this);


	::WaitForSingleObject(m_hEventStop, INFINITE);
	DWORD seq = 1;
	while(TRUE) {
		SetStatus(SERVICE_STOP_PENDING, seq ++, 5000);
		break;
	}
}

///////////////////////////////////////////////////////////////////////////////
//		サービスの停止
///////////////////////////////////////////////////////////////////////////////
void CSrvcMain::OnStop()
{
	::SetEvent(m_hEventStop);
}

///////////////////////////////////////////////////////////////////////////////
//		シャットダウン
///////////////////////////////////////////////////////////////////////////////
void CSrvcMain::OnShutdown()
{
	::SetEvent(m_hEventStop);
}

///////////////////////////////////////////////////////////////////////////////
//		初期処理
///////////////////////////////////////////////////////////////////////////////
void CSrvcMain::Init()
{
	m_hEventStop = ::CreateEvent(NULL, TRUE, FALSE, NULL);
	WSADATA wsaData;
	WSAStartup( MAKEWORD(2, 0), &wsaData );
}

///////////////////////////////////////////////////////////////////////////////
//		終了処理
///////////////////////////////////////////////////////////////////////////////
void CSrvcMain::DeInit()
{
	::WSACleanup();
//	CEventLog log( (UINT)IDS_DISPLAY_NAME );
//	log.LogEvent(STOP_SERVICE, EVENTLOG_INFORMATION_TYPE);
}

